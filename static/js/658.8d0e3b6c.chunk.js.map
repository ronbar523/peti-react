{"version":3,"file":"static/js/658.8d0e3b6c.chunk.js","mappings":"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","sources":["Components/User/LoginSystem/ForgetPassword/Buttons/Login.jsx","Components/User/LoginSystem/ForgetPassword/Buttons/Send.jsx","Components/User/LoginSystem/ForgetPassword/Inputs/Email.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalResetSuccess/Buttons/CloseA.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalResetSuccess/Buttons/CloseB.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalResetSuccess/Buttons/Resend.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalResetSuccess/ModalResetSuccess.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalBlock/Buttons/CloseA.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalBlock/Buttons/CloseB.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalBlock/Buttons/ContactUs.jsx","Components/User/LoginSystem/ForgetPassword/Modals/ModalBlock/ModalBlock.jsx","Pages/User/LoginSystem/ForgetPassword.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst Login = () => {\n  return (\n    <Button\n      sx={{\n        height: 35,\n        mr: \"10px\",\n        marginTop: \"5px\",\n        textTransform: \"unset\",\n      }}\n      variant=\"outlined\"\n      onClick={() => window.location.replace(\"/forget_password\")}\n    >\n      Login\n    </Button>\n  );\n};\n\nexport default Login;\n","import React, { useCallback, useState } from \"react\";\nimport { userStore } from \"../../../../../Store/User/UserStore\";\nimport { forgetPassword } from \"../../../../../Services/UserServices/UserEditService\";\nimport { Button } from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst Send = ({\n  email,\n  emailNotExist,\n  setEmailNotExist,\n  inputRefEmail,\n  validEmail,\n  setModalResetSuccess,\n  setModalUserBlock\n}) => {\n  const [isLoadingSend, setIsLoadingSend] = useState(false);\n\n  const send = useCallback(async () => {\n    try {\n      setIsLoadingSend(true);\n\n      const requestBody = {\n        email: email,\n      };\n      await forgetPassword(requestBody);\n\n      userStore.user.email = email;\n\n      setIsLoadingSend(false);\n      setModalResetSuccess(true);\n    } catch (err) {\n      if (err.response.data.err === \"The email doesn't exist\") {\n        setEmailNotExist(true);\n        setIsLoadingSend(false);\n        inputRefEmail.current.focus();\n      } else if (err.response.data.err === \"You account it's blocked\") {\n        setModalUserBlock(true)\n        setIsLoadingSend(false);\n      } else {\n        window.location.reload();\n      }\n    }\n  }, [email]);\n\n  return (\n    <>\n      {!isLoadingSend ? (\n        <Button\n          sx={{\n            width: 40,\n            height: 34,\n            marginTop: \"5px\",\n            textTransform: \"unset\",\n          }}\n          variant={emailNotExist || !validEmail ? \"outlined\" : \"contained\"}\n          disabled={emailNotExist || !validEmail}\n          onClick={() => send()}\n        >\n          Reset\n        </Button>\n      ) : (\n        <LoadingButton\n          loading={isLoadingSend}\n          variant=\"outlined\"\n          disabled\n          sx={{\n            width: 40,\n            height: 35,\n            marginTop: \"5px\",\n          }}\n        ></LoadingButton>\n      )}\n    </>\n  );\n};\n\nexport default Send;\n","import React, { useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nconst EMAIL_REGEX =\n  /^[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)*@[a-z0-9]{2,}(?:\\.[a-z]{2,})+$/;\n\nconst Email = ({\n  inputRefEmail,\n  email,\n  setEmail,\n  validEmail,\n  setValidEmail,\n  emailFocus,\n  setEmailFocus,\n  emailNotExist,\n  setEmailNotExist,\n}) => {\n  useEffect(() => {\n    if (email === \" \") {\n      setEmail(\"\");\n    } else {\n      if (email[0] === \" \") {\n        let str = email.substr(1);\n        setEmail(str);\n      } else {\n        const result = EMAIL_REGEX.test(email);\n        setValidEmail(result);\n        setEmailNotExist(false);\n      }\n    }\n  }, [email]);\n\n  useEffect(() => {\n    inputRefEmail.current.focus();\n  }, []);\n\n  return (\n    <>\n      <div className=\"mt-5\">\n        <TextField\n          required\n          id=\"outlined-required\"\n          size=\"small\"\n          label=\"Email\"\n          className=\"loginSystemInput\"\n          error={(!validEmail && !emailFocus) || emailNotExist}\n          onChange={(e) => setEmail(e.target.value)}\n          onFocus={() => setEmailFocus(true)}\n          onBlur={() => setEmailFocus(false)}\n          inputRef={inputRefEmail}\n          value={email || \"\"}\n          helperText={\n            !validEmail && !emailFocus\n              ? \"Please Fill Your Email Account\"\n              : emailNotExist\n              ? \"Email Not Exist\"\n              : \"Email\"\n          }\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Email;\n","import React from \"react\";\n\nconst CloseA = ({ setModalResetSuccess }) => {\n  const closeModal = () => {\n    window.location = \"/\";\n    setModalResetSuccess(false);\n    document.body.style.overflow = \"visible\";\n  };\n\n  return <button className=\"btn-close\" onClick={() => closeModal()} />;\n};\n\nexport default CloseA;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst CloseB = ({ setModalResetSuccess }) => {\n  \n  const closeModal = () => {\n    window.location = \"/\";\n    setModalResetSuccess(false);\n    document.body.style.overflow = \"visible\";\n  };\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => closeModal()}\n    >\n      Close\n    </Button>\n  );\n};\n\nexport default CloseB;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { userStore } from \"../../../../../../../Store/User/UserStore\";\nimport { resendForgetPassword } from \"../../../../../../../Services/UserServices/UserPostService\";\nimport { Button } from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst Resend = ({ setRequestAvailble, setModalUserBlock }) => {\n  const [isLoadingResend, setIsLoadingResend] = useState(false);\n  const [resendMail, setResendMail] = useState(false);\n\n  const resend = useCallback(async () => {\n    try {\n      setIsLoadingResend(true);\n      const email = userStore.user.email;\n      await resendForgetPassword(email);\n      setResendMail(true);\n      setIsLoadingResend(false);\n    } catch (err) {\n      if (err.response.data.err === \"Request not available\") {\n        setRequestAvailble(true);\n        setIsLoadingResend(false);\n      } else if (err.response.data.err === \"You account it's blocked\") {\n        setModalUserBlock(true);\n      } else {\n        window.location.reload();\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (resendMail) {\n      setTimeout(() => {\n        setResendMail(false);\n      }, 20000);\n    }\n  }, [resendMail]);\n\n  return (\n    <>\n      {!isLoadingResend ? (\n        <Button\n          variant=\"outlined\"\n          sx={{\n            float: \"right\",\n            marginRight: \"5px\",\n            marginTop: \"7px\",\n            marginBottom: \"9px\",\n            textTransform: \"unset\",\n            width: 110,\n            height: 37,\n          }}\n          disabled={resendMail}\n          onClick={() => resend()}\n        >\n          Send Again\n        </Button>\n      ) : (\n        <LoadingButton\n          loading={isLoadingResend}\n          variant=\"outlined\"\n          disabled\n          sx={{\n            float: \"right\",\n            marginRight: \"5px\",\n            marginTop: \"7px\",\n            marginBottom: \"9px\",\n            height: 37,\n            width: 110,\n          }}\n        ></LoadingButton>\n      )}\n    </>\n  );\n};\n\nexport default Resend;\n","import React, { useEffect, useState } from \"react\";\nimport CloseA from \"./Buttons/CloseA\";\nimport CloseB from \"./Buttons/CloseB\";\nimport Resend from \"./Buttons/Resend\";\n\nconst ModalResetSuccess = ({ setModalResetSuccess, setModalUserBlock }) => {\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n  }, []);\n\n  const [requestAvailble, setRequestAvailble] = useState(true);\n\n  return (\n    <>\n      <div className=\"modal show fade d-block\" tabIndex=\"-1\">\n        <div className=\"modal-dialog model-border model-block modalMessageSuccessLocation\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"pt-2 px-2\">Message!</h5>\n              <CloseA setModalResetSuccess={setModalResetSuccess} />\n            </div>\n            <div className=\"modal-body\">\n              {requestAvailble ? (\n                <h6 className=\"p-4 text-center modalMessageSuccessText\">\n                  Please check your email\n                </h6>\n              ) : (\n                <h6 className=\"p-4 text-center modalMessageSuccessText\">\n                  Request not availble\n                </h6>\n              )}\n            </div>\n\n            <div className=\"modal-footer\">\n              <CloseB setModalResetSuccess={setModalResetSuccess} />\n              <Resend setModalUserBlock={setModalUserBlock} setRequestAvailble={setRequestAvailble} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalResetSuccess;\n","import React from 'react'\n\nconst CloseA = ({setModalUserBlock}) => {\n  const closeModal = () => {\n    window.location = \"/\";\n    setModalUserBlock(false);\n    document.body.style.overflow = \"visible\";\n  };\n\n  return <button className=\"btn-close\" onClick={() => closeModal()} />;\n};\n\nexport default CloseA;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst CloseB = ({ setModalUserBlock }) => {\n  const closeModal = () => {\n    window.location = \"/\";\n    setModalUserBlock(false);\n    document.body.style.overflow = \"visible\";\n  };\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => closeModal()}\n    >\n      Close\n    </Button>\n  );\n};\n\nexport default CloseB;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst ContactUs = ({ setModalUserBlock }) => {\n  \n  const contactUs = () => {\n    window.open(\"https://www.google.com\", \"_blank\");\n    document.body.style.overflow = \"visible\";\n    setModalUserBlock(false);\n  };\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => contactUs()}\n    >\n      Contact Us\n    </Button>\n  );\n};\n\nexport default ContactUs;\n","import React, { useEffect } from \"react\";\nimport { Navigate } from \"react-router\";\nimport { userStore } from \"../../../../../../Store/User/UserStore\";\nimport CloseA from \"./Buttons/CloseA\";\nimport CloseB from \"./Buttons/CloseB\";\nimport ContactUs from \"./Buttons/ContactUs\";\n\nconst ModalBlock = ({ setModalUserBlock }) => {\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n  }, []);\n\n  return (\n    <>\n      {userStore.isLogin && <Navigate to=\"/\" />}\n      <div className=\"modal show fade d-block\" tabIndex=\"-1\">\n        <div className=\"modal-dialog model-border model-block modalBlockLocation\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"pt-2 px-2\">Message!</h5>\n              <CloseA setModalUserBlock={setModalUserBlock} />\n            </div>\n            <div className=\"modal-body\">\n              <h6 className=\"p-4 text-center modalBlockSpaceParagraph\">\n                Your account is blocked!\n              </h6>\n            </div>\n\n            <div className=\"modal-footer\">\n              <ContactUs setModalUserBlock={setModalUserBlock} />\n              <CloseB setModalUserBlock={setModalUserBlock} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalBlock;\n","import React, { useRef, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { userStore } from \"../../../Store/User/UserStore\";\nimport Login from \"../../../Components/User/LoginSystem/ForgetPassword/Buttons/Login\";\nimport Send from \"../../../Components/User/LoginSystem/ForgetPassword/Buttons/Send\";\nimport Email from \"../../../Components/User/LoginSystem/ForgetPassword/Inputs/Email\";\nimport ModalResetSuccess from \"../../../Components/User/LoginSystem/ForgetPassword/Modals/ModalResetSuccess/ModalResetSuccess\";\nimport ModalBlock from \"../../../Components/User/LoginSystem/ForgetPassword/Modals/ModalBlock/ModalBlock\";\n\nconst ForgetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(true);\n  const [emailNotExist, setEmailNotExist] = useState(false);\n\n  const [modalResetSuccess, setModalResetSuccess] = useState(false);\n  const [modalUserBlock, setModalUserBlock] = useState(false);\n  const inputRefEmail = useRef();\n\n  return (\n    <>\n      {userStore.isLogin && <Navigate to=\"/\" />}\n      <div\n        className={\n          modalResetSuccess || modalUserBlock\n            ? \"loginSystemBox opacity-modal\"\n            : \"loginSystemBox\"\n        }\n      >\n        <button\n          className=\"LoginSystemButtonLogo\"\n          onClick={() => window.location.replace(\"/\")}\n        >\n          <img\n            className=\"loginSystemLogo\"\n            src=\"https://i.imagesup.co/images2/55998d96407049438c45b5a0c79de5833b8faaf1.png\"\n            alt=\"Peti Logo\"\n          ></img>\n        </button>\n        <p className=\"loginSystemTitle \">Reset Your Password</p>\n        <div className=\"text-center\">\n          <Email\n            inputRefEmail={inputRefEmail}\n            email={email}\n            setEmail={setEmail}\n            emailFocus={emailFocus}\n            setEmailFocus={setEmailFocus}\n            validEmail={validEmail}\n            setValidEmail={setValidEmail}\n            emailNotExist={emailNotExist}\n            setEmailNotExist={setEmailNotExist}\n          />\n        </div>\n\n        <div className=\"buttons-register\">\n          <Login />\n\n          <Send\n            email={email}\n            emailNotExist={emailNotExist}\n            setEmailNotExist={setEmailNotExist}\n            inputRefEmail={inputRefEmail}\n            validEmail={validEmail}\n            setModalResetSuccess={setModalResetSuccess}\n            setModalUserBlock={setModalUserBlock}\n          />\n        </div>\n      </div>\n      {modalResetSuccess ? (\n        <ModalResetSuccess\n          setModalResetSuccess={setModalResetSuccess}\n          setModalUserBlock={setModalUserBlock}\n        />\n      ) : null}\n\n      {modalUserBlock ? (\n        <ModalBlock setModalUserBlock={setModalUserBlock} />\n      ) : null}\n    </>\n  );\n};\n\nexport default ForgetPassword;\n"],"names":["Button","sx","height","mr","marginTop","textTransform","variant","onClick","window","location","replace","email","emailNotExist","setEmailNotExist","inputRefEmail","validEmail","setModalResetSuccess","setModalUserBlock","useState","isLoadingSend","setIsLoadingSend","send","useCallback","requestBody","forgetPassword","userStore","response","data","err","current","focus","reload","LoadingButton","loading","disabled","width","EMAIL_REGEX","setEmail","setValidEmail","emailFocus","setEmailFocus","useEffect","str","substr","result","test","className","TextField","required","id","size","label","error","onChange","e","target","value","onFocus","onBlur","inputRef","helperText","document","body","style","overflow","float","marginRight","marginBottom","setRequestAvailble","isLoadingResend","setIsLoadingResend","resendMail","setResendMail","resend","resendForgetPassword","setTimeout","requestAvailble","tabIndex","open","to","modalResetSuccess","modalUserBlock","useRef","src","alt"],"sourceRoot":""}