{"version":3,"file":"static/js/935.d5b7528b.chunk.js","mappings":"uMAwBA,EArBe,WACb,OACE,+BACE,SAACA,EAAA,EAAM,CACLC,GAAI,CACFC,MAAO,GACPC,OAAQ,GACRC,UAAW,MACXC,YAAa,OACbC,cAAe,SAEjBC,QAAQ,WACRC,QAAS,kBAAMC,OAAOC,SAASC,QAAQ,IAAI,EAAC,SAE7C,YAKP,E,wCCwDA,EAzEe,SAAH,GAOL,IANLC,EAAQ,EAARA,SACAC,EAAO,EAAPA,QACAC,EAAa,EAAbA,cACAC,EAAiB,EAAjBA,kBACAC,EAAqB,EAArBA,sBACAC,EAAoB,EAApBA,qBAEA,GAA8CC,EAAAA,EAAAA,WAAS,GAAM,eAAtDC,EAAe,KAAEC,EAAkB,KAEpCC,GAAiBC,EAAAA,EAAAA,cAAW,uBAAC,iGAU9B,OAV8B,SAE/BF,GAAmB,GACbG,EAAMd,OAAOC,SAASc,KACtBC,EAAcF,EAAIG,MAAM,QACxBC,EAAQF,EAAY,GACpBG,EAAuBH,EAAY,GAEnCI,EAAc,CAClBjB,SAAUA,GACV,EAAD,QAEKkB,EAAAA,EAAAA,IAAcH,EAAOC,EAAsBC,GAAa,KAAD,EAC7Db,GAAsB,GAAM,kDAGA,0BAA1B,KAAIe,SAASC,KAAKC,KACQ,iCAA1B,KAAIF,SAASC,KAAKC,IAElBhB,GAAqB,GACc,4BAA1B,KAAIc,SAASC,KAAKC,IAC3BlB,GAAkB,GAElBN,OAAOC,SAASwB,SACjB,0DAEF,CAACtB,IAEJ,OACE,8BACIO,GAiBA,SAACgB,EAAA,EAAa,CACZC,QAASjB,EACTZ,QAAQ,WACR8B,UAAQ,EACRpC,GAAI,CACFqC,MAAO,QACPpC,MAAO,GACPC,OAAQ,GACRC,UAAW,UAxBf,SAACJ,EAAA,EAAM,CACLC,GAAI,CACFC,MAAO,GACPC,OAAQ,GACRC,UAAW,MACXE,cAAe,SAEjBC,QACGO,GAAiBF,IAAaC,EAAuB,YAAb,WAE3CwB,UAAWvB,GAAiBF,IAAaC,EACzCL,QAAS,kBAAMa,GAAgB,EAAC,SACjC,YAkBT,E,UCVA,EA/DwB,SAAH,GASd,IARLR,EAAO,EAAPA,QACA0B,EAAU,EAAVA,WACA3B,EAAQ,EAARA,SACA4B,EAAU,EAAVA,WACAC,EAAa,EAAbA,cACAC,EAAY,EAAZA,aACAC,EAAe,EAAfA,gBACA7B,EAAa,EAAbA,cAEA,GAAwCI,EAAAA,EAAAA,WAAS,GAAM,eAAhD0B,EAAY,KAAEC,EAAe,KAwBpC,OAtBAC,EAAAA,EAAAA,YAAU,WACJjC,EAAQkC,OAAS,IACfnC,IAAaC,EACf4B,GAAc,IAEdA,GAAc,GACdE,GAAgB,IAGtB,GAAG,CAACC,KAEJE,EAAAA,EAAAA,YAAU,WACJlC,EAASmC,QAAUlC,EAAQkC,QAAUlC,EAAQkC,OAAS,IACpDnC,IAAaC,EACf4B,GAAc,IAEdA,GAAc,GACdE,GAAgB,IAGtB,GAAG,CAAC9B,EAASD,KAGX,SAACoC,EAAA,EAAS,CACRC,UAAQ,EACRC,aAAa,MACbC,GAAG,oBACHC,MAAM,mBACNC,KAAM,WACNC,KAAK,QACLC,UAAU,yBACVlB,UAAWvB,EACX0C,MAAOhB,EACPiB,SAAU,SAACC,GAAC,OAAKnB,EAAWmB,EAAEC,OAAOC,MAAM,EAC3CC,QAAS,kBAAMhB,GAAgB,EAAK,EACpCiB,OAAQ,WACNjB,GAAgB,EAClB,EACAkB,WACEvB,EACI,0BACAE,EACA,mBACA,0BAENsB,WAAY,CAAEC,UAAW,IACzBL,MAAO/C,GAAW,IAGxB,EC7DMqD,EACJ,2DAyDF,EAvDiB,SAAH,GAMP,IALLC,EAAQ,EAARA,SACAvD,EAAQ,EAARA,SACAwD,EAAW,EAAXA,YACAtD,EAAa,EAAbA,cACAuD,EAAgB,EAAhBA,iBAEA,GAA0CnD,EAAAA,EAAAA,WAAS,GAAK,eAAjDoD,EAAa,KAAEC,EAAgB,KAOtC,OALAzB,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAASN,EAAeO,KAAK7D,GACnCyD,EAAiBG,EACnB,GAAG,CAAC5D,KAGF,+BACE,gBAAK2C,UAAU,OAAM,UACnB,SAACP,EAAA,EAAS,CACRC,UAAQ,EACRC,aAAa,MACbC,GAAG,oBACHC,MAAM,WACNC,KAAM,WACNC,KAAK,QACLC,UAAU,mBACVC,OAAQ1C,IAAkBwD,EAC1Bb,SAAU,SAACC,GAAC,OAAKU,EAAYV,EAAEC,OAAOC,MAAM,EAC5CC,QAAS,kBAAMU,GAAiB,EAAK,EACrCT,OAAQ,kBAAMS,GAAiB,EAAM,EACrCR,WACIO,KAAiB1D,EAASmC,OAAS,IAAOjC,EAUxCA,EACF,mBAEA,YAZA,gCAAE,8BAEA,kBAAM,qBAEN,kBAAM,uBAEN,kBAAM,iBASZkD,WAAY,CAAEC,UAAW,IACzBL,MAAOhD,GAAY,GACnBuD,SAAUA,OAKpB,E,UC/CA,EAVe,SAAH,GAA6B,IAAxBpD,EAAiB,EAAjBA,kBAOf,OAAO,mBAAQwC,UAAU,YAAY/C,QAAS,kBAL5CC,OAAOC,SAAW,IAClBK,GAAkB,QAClB2D,SAASC,KAAKC,MAAMC,SAAW,UAG+B,GAClE,ECgBA,EAvBe,SAAH,GAA+B,IAAzB9D,EAAiB,EAAjBA,kBAMhB,OACE,SAACf,EAAA,EAAM,CACLO,QAAQ,WACRN,GAAI,CACFqC,MAAO,QACPjC,YAAa,MACbD,UAAW,MACX0E,aAAc,MACdxE,cAAe,SAEjBE,QAAS,kBAdXC,OAAOC,SAAW,IAClBK,GAAkB,QAClB2D,SAASC,KAAKC,MAAMC,SAAW,UAYF,EAAC,SAC7B,SAIL,ECGA,EAxBkB,SAAH,GAA+B,IAAzB9D,EAAiB,EAAjBA,kBAOnB,OACE,SAACf,EAAA,EAAM,CACLO,QAAQ,WACRN,GAAI,CACFqC,MAAO,QACPjC,YAAa,MACbD,UAAW,MACX0E,aAAc,MACdxE,cAAe,SAEjBE,QAAS,kBAdXC,OAAOsE,KAAK,yBAA0B,UACtCL,SAASC,KAAKC,MAAMC,SAAW,eAC/B9D,GAAkB,EAYU,EAAC,SAC5B,cAIL,ECcA,EAhCmB,SAAH,GAA+B,IAAzBA,EAAiB,EAAjBA,kBAKpB,OAJA+B,EAAAA,EAAAA,YAAU,WACR4B,SAASC,KAAKC,MAAMC,SAAW,QACjC,GAAG,KAGD,gCACGG,EAAAA,EAAAA,UAAqB,SAAC,KAAQ,CAACC,GAAG,OACnC,gBAAK1B,UAAU,0BAA0B2B,SAAS,KAAI,UACpD,gBAAK3B,UAAU,2DAA0D,UACvE,iBAAKA,UAAU,gBAAe,WAC5B,iBAAKA,UAAU,eAAc,WAC3B,eAAIA,UAAU,YAAW,SAAC,cAC1B,SAAC,EAAM,CAACxC,kBAAmBA,QAE7B,gBAAKwC,UAAU,aAAY,UACzB,eAAIA,UAAU,2CAA0C,SAAC,gCAK3D,iBAAKA,UAAU,eAAc,WAC3B,SAAC,EAAS,CAACxC,kBAAmBA,KAC9B,SAAC,EAAM,CAACA,kBAAmBA,gBAOzC,ECnCA,IASA,EATe,SAAH,ICFG,SAAmCoE,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,CDAwB,IAMtB,OAAO,mBAAQ5B,UAAU,YAAY/C,QAAS,kBAJ5CkE,SAASC,KAAKC,MAAMC,SAAW,eAC/BpE,OAAOC,SAAW,cAG4C,GAClE,EEgBA,EAtBe,WAKb,OACE,SAACV,EAAA,EAAM,CACLO,QAAQ,WACRN,GAAI,CACFqC,MAAO,QACPjC,YAAa,MACbD,UAAW,MACX0E,aAAc,MACdxE,cAAe,SAEjBE,QAAS,kBAbXkE,SAASC,KAAKC,MAAMC,SAAW,eAC/BpE,OAAOC,SAAW,cAYW,EAAC,SAC7B,SAIL,ECMA,EA1B2B,WACzB,OACE,+BACE,gBAAK6C,UAAU,0BAA0B2B,SAAS,KAAI,UACpD,gBAAK3B,UAAU,oEAAmE,UAChF,iBAAKA,UAAU,gBAAe,WAC5B,iBAAKA,UAAU,eAAc,WAC3B,eAAIA,UAAU,YAAW,SAAC,cAC1B,SAAC,EAAM,QAET,gBAAKA,UAAU,aAAY,UACzB,eAAIA,UAAU,kBAAiB,SAAC,qCAKlC,gBAAKA,UAAU,eAAc,UAC3B,SAAC,EAAM,cAOrB,ECfA,EAVc,SAAH,GAAkC,IAA5BtC,EAAoB,EAApBA,qBAOf,OAAO,mBAAQsC,UAAU,YAAY/C,QAAS,kBAL5CC,OAAOC,SAAW,IAClBO,GAAqB,QACrByD,SAASC,KAAKC,MAAMC,SAAW,UAG+B,GAClE,ECWA,EAlBW,WACT,OACE,SAAC7E,EAAA,EAAM,CACLO,QAAQ,WACRN,GAAI,CACFqC,MAAO,QACPjC,YAAa,MACbD,UAAW,MACX0E,aAAc,MACdxE,cAAe,SAEjBE,QAAS,kBAAMC,OAAOC,SAASC,QAAQ,mBAAmB,EAAC,SAC5D,SAIL,ECeA,EA5B0B,SAAH,GAAkC,IAA5BM,EAAoB,EAApBA,qBAE3B,OACE,gCACG+D,EAAAA,EAAAA,UAAqB,SAAC,KAAQ,CAACC,GAAG,OACnC,gBAAK1B,UAAU,0BAA0B2B,SAAS,KAAI,UACpD,gBAAK3B,UAAU,iEAAgE,UAC7E,iBAAKA,UAAU,gBAAe,WAC5B,iBAAKA,UAAU,eAAc,WAC3B,eAAIA,UAAU,YAAW,SAAC,cAC1B,SAAC,EAAK,CAACtC,qBAAsBA,QAE/B,gBAAKsC,UAAU,aAAY,UACzB,eAAIA,UAAU,kBAAiB,SAAC,4BAKlC,gBAAKA,UAAU,eAAc,UAC3B,SAAC,EAAE,eAOjB,EC+DA,EApFoB,WAClB,IAAMY,GAAWkB,EAAAA,EAAAA,UAEjB,GAAgCnE,EAAAA,EAAAA,UAAS,IAAG,eAArCN,EAAQ,KAAEwD,EAAW,KAC5B,GAA0ClD,EAAAA,EAAAA,WAAS,GAAM,eAAlDJ,EAAa,KAAEuD,EAAgB,KAEtC,GAA8BnD,EAAAA,EAAAA,UAAS,IAAG,eAAnCL,EAAO,KAAE0B,EAAU,KAC1B,GAAwCrB,EAAAA,EAAAA,WAAS,GAAM,eAAhDwB,EAAY,KAAEC,EAAe,KAEpC,GAAoCzB,EAAAA,EAAAA,WAAS,GAAM,eAA5CsB,EAAU,KAAEC,EAAa,KAEhC,GAA4CvB,EAAAA,EAAAA,WAAS,GAAM,eAApDoE,EAAc,KAAEvE,EAAiB,KACxC,GAAoDG,EAAAA,EAAAA,WAAS,GAAM,eAA5DqE,EAAkB,KAAEvE,EAAqB,KAChD,GAAkDE,EAAAA,EAAAA,WAAS,GAAM,eAA1DsE,EAAiB,KAAEvE,EAAoB,KAE9C,OACE,gCACG+D,EAAAA,EAAAA,UAAqB,SAAC,KAAQ,CAACC,GAAG,OACnC,iBACE1B,UACE+B,GAAkBC,GAAsBC,EACpC,+BACA,iBACL,WAED,mBACEjC,UAAU,wBACV/C,QAAS,kBAAMC,OAAOC,SAASC,QAAQ,IAAI,EAAC,UAE5C,gBACE4C,UAAU,kBACVkC,IAAI,6EACJC,IAAI,iBAGR,cAAGnC,UAAU,mBAAkB,SAAC,kBAChC,iBAAKA,UAAU,cAAa,WAC1B,SAAC,EAAQ,CACPY,SAAUA,EACVvD,SAAUA,EACVwD,YAAaA,EACbtD,cAAeA,EACfuD,iBAAkBA,KAEpB,SAAC,EAAe,CACdxD,QAASA,EACT0B,WAAYA,EACZ3B,SAAUA,EACV4B,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjB7B,cAAeA,QAInB,iBAAKyC,UAAU,mBAAkB,WAC/B,SAAC,EAAM,KACP,SAAC,EAAM,CACL1C,QAASA,EACTD,SAAUA,EACVE,cAAeA,EACfC,kBAAmBA,EACnBC,sBAAuBA,EACvBC,qBAAsBA,UAI3BqE,GACC,SAAC,EAAU,CAACvE,kBAAmBA,IAC7B,KAEHwE,GACC,SAAC,EAAkB,CAACvE,sBAAuBA,IACzC,KAEHwE,GACC,SAAC,EAAiB,CAACvE,qBAAsBA,IACvC,OAIV,C","sources":["Components/User/LoginSystem/NewPassword/Buttons/Cancel.jsx","Components/User/LoginSystem/NewPassword/Buttons/Update.jsx","Components/User/LoginSystem/NewPassword/Inputs/ConfrimPassword.jsx","Components/User/LoginSystem/NewPassword/Inputs/Password.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalBlock/Buttons/CloseA.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalBlock/Buttons/CloseB.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalBlock/Buttons/ContactUs.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalBlock/ModalBlock.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalChangeSuccess/Buttons/CloseA.jsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","Components/User/LoginSystem/NewPassword/Modals/ModalChangeSuccess/Buttons/CloseB.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalChangeSuccess/ModalChangeSuccess.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalNotAvailable/Buttons/Close.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalNotAvailable/Buttons/Ok.jsx","Components/User/LoginSystem/NewPassword/Modals/ModalNotAvailable/ModalNotAvailable.jsx","Pages/User/LoginSystem/NewPassword.jsx"],"sourcesContent":["import React from 'react'\nimport { Button } from '@mui/material';\n\nconst Cancel = () => {\n  return (\n    <>\n      <Button\n        sx={{\n          width: 40,\n          height: 35,\n          marginTop: \"5px\",\n          marginRight: \"10px\",\n          textTransform: \"unset\",\n        }}\n        variant=\"outlined\"\n        onClick={() => window.location.replace(\"/\")}\n        \n      >\n        Cancel\n      </Button>\n    </>\n  );\n};\n\nexport default Cancel;\n","import React, { useCallback, useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { resetPassword } from \"../../../../../Services/UserServices/UserEditService\";\n\nconst Update = ({\n  password,\n  confirm,\n  validPassword,\n  setModalUserBlock,\n  setModalChangeSuccess,\n  setModalNotAvailable,\n}) => {\n  const [isLoadingUpdate, setIsLoadingUpdate] = useState(false);\n\n  const updatePassword = useCallback(async () => {\n    try {\n      setIsLoadingUpdate(true);\n      const url = window.location.href;\n      const urlWordsArr = url.split(/[=&]/);\n      const email = urlWordsArr[1];\n      const passowrdSecureNumber = urlWordsArr[3];\n\n      const requestBody = {\n        password: password,\n      };\n\n      await resetPassword(email, passowrdSecureNumber, requestBody);\n      setModalChangeSuccess(true);\n    } catch (err) {\n      if (\n        err.response.data.err === \"The link it's expired\" ||\n        err.response.data.err === \"The random number it's wrong\"\n      ) {\n        setModalNotAvailable(true);\n      } else if (err.response.data.err === \"The user it's not exist\") {\n        setModalUserBlock(true);\n      } else {\n        window.location.reload();\n      }\n    }\n  }, [password]);\n\n  return (\n    <>\n      {!isLoadingUpdate ? (\n        <Button\n          sx={{\n            width: 40,\n            height: 34,\n            marginTop: \"5px\",\n            textTransform: \"unset\",\n          }}\n          variant={\n            !validPassword || password !== confirm ? \"outlined\" : \"contained\"\n          }\n          disabled={!validPassword || password !== confirm}\n          onClick={() => updatePassword()}\n        >\n          Update\n        </Button>\n      ) : (\n        <LoadingButton\n          loading={isLoadingUpdate}\n          variant=\"outlined\"\n          disabled\n          sx={{\n            float: \"right\",\n            width: 40,\n            height: 34,\n            marginTop: \"5px\",\n          }}\n        ></LoadingButton>\n      )}\n    </>\n  );\n};\n\nexport default Update;\n","import React, { useEffect, useState } from \"react\";\nimport { TextField } from \"@mui/material\";\n\nconst ConfrimPassowrd = ({\n  confirm,\n  setConfirm,\n  password,\n  errConfirm,\n  setErrConfirm,\n  validConfirm,\n  setValidConfirm,\n  validPassword,\n}) => {\n  const [confirmFocus, setConfirmFocus] = useState(false);\n\n  useEffect(() => {\n    if (confirm.length > 0) {\n      if (password !== confirm) {\n        setErrConfirm(true);\n      } else {\n        setErrConfirm(false);\n        setValidConfirm(true);\n      }\n    }\n  }, [confirmFocus]);\n\n  useEffect(() => {\n    if (password.length <= confirm.length && confirm.length > 0) {\n      if (password !== confirm) {\n        setErrConfirm(true);\n      } else {\n        setErrConfirm(false);\n        setValidConfirm(true);\n      }\n    }\n  }, [confirm, password]);\n\n  return (\n    <TextField\n      required\n      autoComplete=\"off\"\n      id=\"outlined-required\"\n      label=\"Confirm Password\"\n      type={\"password\"}\n      size=\"small\"\n      className=\"loginSystemInput  mt-2\"\n      disabled={!validPassword}\n      error={errConfirm}\n      onChange={(e) => setConfirm(e.target.value)}\n      onFocus={() => setConfirmFocus(true)}\n      onBlur={() => {\n        setConfirmFocus(false);\n      }}\n      helperText={\n        errConfirm\n          ? \"The Passwords Not Match\"\n          : validConfirm\n          ? \"Passwords Match!\"\n          : \"Please Confrim Password\"\n      }\n      inputProps={{ maxLength: 30 }}\n      value={confirm || \"\"}\n    />\n  );\n};\n\nexport default ConfrimPassowrd;\n","import React, { useEffect, useState } from \"react\";\nimport { TextField } from \"@mui/material\";\n\nconst PASSWORD_REGEX =\n  /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%&]).{6,30}$/;\n\nconst Password = ({\n  inputRef,\n  password,\n  setPassword,\n  validPassword,\n  setValidPassword,\n}) => {\n  const [passwordFocus, setPasswordFocus] = useState(true);\n\n  useEffect(() => {\n    const result = PASSWORD_REGEX.test(password);\n    setValidPassword(result);\n  }, [password]);\n\n  return (\n    <>\n      <div className=\"my-3\">\n        <TextField\n          required\n          autoComplete=\"off\"\n          id=\"outlined-required\"\n          label=\"Password\"\n          type={\"password\"}\n          size=\"small\"\n          className=\"loginSystemInput\"\n          error={!validPassword && !passwordFocus}\n          onChange={(e) => setPassword(e.target.value)}\n          onFocus={() => setPasswordFocus(true)}\n          onBlur={() => setPasswordFocus(false)}\n          helperText={\n            (!passwordFocus || password.length > 0) && !validPassword ? (\n              <>\n                *Min 6 And Max 30 Charters\n                <br />\n                *Min 1 Big Letter\n                <br />\n                *Min 1 Small Letter\n                <br />\n                *Min 1 Sign\n              </>\n            ) : validPassword ? (\n              \"Password Is Good\"\n            ) : (\n              \"Password\"\n            )\n          }\n          inputProps={{ maxLength: 30 }}\n          value={password || \"\"}\n          inputRef={inputRef}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Password;\n","import React from 'react'\n\nconst CloseA = ({setModalUserBlock}) => {\n  const closeModal = () => {\n    window.location = \"/\";\n    setModalUserBlock(false);\n    document.body.style.overflow = \"visible\";\n  };\n\n  return <button className=\"btn-close\" onClick={() => closeModal()} />;\n};\n\nexport default CloseA;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst CloseB = ({ setModalUserBlock }) => {\n  const closeModal = () => {\n    window.location = \"/\";\n    setModalUserBlock(false);\n    document.body.style.overflow = \"visible\";\n  };\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => closeModal()}\n    >\n      Close\n    </Button>\n  );\n};\n\nexport default CloseB;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst ContactUs = ({ setModalUserBlock }) => {\n  \n  const contactUs = () => {\n    window.open(\"https://www.google.com\", \"_blank\");\n    document.body.style.overflow = \"visible\";\n    setModalUserBlock(false);\n  };\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => contactUs()}\n    >\n      Contact Us\n    </Button>\n  );\n};\n\nexport default ContactUs;\n","import React, { useEffect } from \"react\";\nimport { Navigate } from \"react-router\";\nimport { userStore } from \"../../../../../../Store/User/UserStore\";\nimport CloseA from \"./Buttons/CloseA\";\nimport CloseB from \"./Buttons/CloseB\";\nimport ContactUs from \"./Buttons/ContactUs\";\n\nconst ModalBlock = ({ setModalUserBlock }) => {\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n  }, []);\n\n  return (\n    <>\n      {userStore.isLogin && <Navigate to=\"/\" />}\n      <div className=\"modal show fade d-block\" tabIndex=\"-1\">\n        <div className=\"modal-dialog model-border model-block modalBlockLocation\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"pt-2 px-2\">Message!</h5>\n              <CloseA setModalUserBlock={setModalUserBlock} />\n            </div>\n            <div className=\"modal-body\">\n              <h6 className=\"p-4 text-center modalBlockSpaceParagraph\">\n                Your account is blocked!\n              </h6>\n            </div>\n\n            <div className=\"modal-footer\">\n              <ContactUs setModalUserBlock={setModalUserBlock} />\n              <CloseB setModalUserBlock={setModalUserBlock} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalBlock;\n","import React from \"react\";\n\nconst CloseA = ({}) => {\n  const closeModal = () => {\n    document.body.style.overflow = \"visible\";\n    window.location = \"/my_profile\";\n  };\n\n  return <button className=\"btn-close\" onClick={() => closeModal()} />;\n};\n\nexport default CloseA;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import React from 'react'\nimport { Button } from '@mui/material';\n\nconst CloseB = () => {\n  const closeModal = () => {\n    document.body.style.overflow = \"visible\";\n    window.location = \"/my_profile\";\n  };\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => closeModal()}\n    >\n      Close\n    </Button>\n  );\n};\n\nexport default CloseB;\n","import CloseA from \"./Buttons/CloseA\";\nimport CloseB from \"./Buttons/CloseB\";\n\nconst ModalChangeSuccess = () => {\n  return (\n    <>\n      <div className=\"modal show fade d-block\" tabIndex=\"-1\">\n        <div className=\"modal-dialog model-border model-block modalMessageSuccessLocation\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"pt-2 px-2\">Message!</h5>\n              <CloseA />\n            </div>\n            <div className=\"modal-body\">\n              <h6 className=\"p-4 text-center\">\n                Password changed successfully\n              </h6>\n            </div>\n\n            <div className=\"modal-footer\">\n              <CloseB />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalChangeSuccess;\n","import React from \"react\";\n\nconst Close = ({ setModalNotAvailable }) => {\n  const closeModal = () => {\n    window.location = \"/\";\n    setModalNotAvailable(false);\n    document.body.style.overflow = \"visible\";\n  };\n\n  return <button className=\"btn-close\" onClick={() => closeModal()} />;\n};\n\nexport default Close;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst Ok = () => {\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        float: \"right\",\n        marginRight: \"5px\",\n        marginTop: \"7px\",\n        marginBottom: \"9px\",\n        textTransform: \"unset\",\n      }}\n      onClick={() => window.location.replace(\"/forget_password\")}\n    >\n      Close\n    </Button>\n  );\n};\n\nexport default Ok;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { userStore } from \"../../../../../../Store/User/UserStore\";\nimport Close from \"./Buttons/Close\";\nimport Ok from \"./Buttons/Ok\";\n\nconst ModalNotAvailable = ({ setModalNotAvailable }) => {\n\n  return (\n    <>\n      {userStore.isLogin && <Navigate to=\"/\" />}\n      <div className=\"modal show fade d-block\" tabIndex=\"-1\">\n        <div className=\"modal-dialog model-border model-block modalNotAvilableLocation\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"pt-2 px-2\">Message!</h5>\n              <Close setModalNotAvailable={setModalNotAvailable} />\n            </div>\n            <div className=\"modal-body\">\n              <h6 className=\"p-4 text-center\">\n                Request not availble\n              </h6>\n            </div>\n\n            <div className=\"modal-footer\">\n              <Ok />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalNotAvailable;\n","import React, { useRef, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Cancel from \"../../../Components/User/LoginSystem/NewPassword/Buttons/Cancel\";\nimport Update from \"../../../Components/User/LoginSystem/NewPassword/Buttons/Update\";\nimport ConfrimPassowrd from \"../../../Components/User/LoginSystem/NewPassword/Inputs/ConfrimPassword\";\nimport Password from \"../../../Components/User/LoginSystem/NewPassword/Inputs/Password\";\nimport ModalBlock from \"../../../Components/User/LoginSystem/NewPassword/Modals/ModalBlock/ModalBlock\";\nimport ModalChangeSuccess from \"../../../Components/User/LoginSystem/NewPassword/Modals/ModalChangeSuccess/ModalChangeSuccess\";\nimport ModalNotAvailable from \"../../../Components/User/LoginSystem/NewPassword/Modals/ModalNotAvailable/ModalNotAvailable\";\nimport { userStore } from \"../../../Store/User/UserStore\";\n\nconst NewPassword = () => {\n  const inputRef = useRef();\n\n  const [password, setPassword] = useState(\"\");\n  const [validPassword, setValidPassword] = useState(false);\n\n  const [confirm, setConfirm] = useState(\"\");\n  const [validConfirm, setValidConfirm] = useState(false);\n\n  const [errConfirm, setErrConfirm] = useState(false);\n\n  const [modalUserBlock, setModalUserBlock] = useState(false);\n  const [modalChangeSuccess, setModalChangeSuccess] = useState(false);\n  const [modalNotAvailable, setModalNotAvailable] = useState(false);\n\n  return (\n    <>\n      {userStore.isLogin && <Navigate to=\"/\" />}\n      <div\n        className={\n          modalUserBlock || modalChangeSuccess || modalNotAvailable\n            ? \"loginSystemBox opacity-modal\"\n            : \"loginSystemBox\"\n        }\n      >\n        <button\n          className=\"LoginSystemButtonLogo\"\n          onClick={() => window.location.replace(\"/\")}\n        >\n          <img\n            className=\"loginSystemLogo\"\n            src=\"https://i.imagesup.co/images2/55998d96407049438c45b5a0c79de5833b8faaf1.png\"\n            alt=\"Peti Logo\"\n          ></img>\n        </button>\n        <p className=\"loginSystemTitle\">New Password</p>\n        <div className=\"text-center\">\n          <Password\n            inputRef={inputRef}\n            password={password}\n            setPassword={setPassword}\n            validPassword={validPassword}\n            setValidPassword={setValidPassword}\n          />\n          <ConfrimPassowrd\n            confirm={confirm}\n            setConfirm={setConfirm}\n            password={password}\n            errConfirm={errConfirm}\n            setErrConfirm={setErrConfirm}\n            validConfirm={validConfirm}\n            setValidConfirm={setValidConfirm}\n            validPassword={validPassword}\n          />\n        </div>\n\n        <div className=\"buttons-register\">\n          <Cancel />\n          <Update\n            confirm={confirm}\n            password={password}\n            validPassword={validPassword}\n            setModalUserBlock={setModalUserBlock}\n            setModalChangeSuccess={setModalChangeSuccess}\n            setModalNotAvailable={setModalNotAvailable}\n          />\n        </div>\n      </div>\n      {modalUserBlock ? (\n        <ModalBlock setModalUserBlock={setModalUserBlock} />\n      ) : null}\n\n      {modalChangeSuccess ? (\n        <ModalChangeSuccess setModalChangeSuccess={setModalChangeSuccess} />\n      ) : null}\n\n      {modalNotAvailable ? (\n        <ModalNotAvailable setModalNotAvailable={setModalNotAvailable} />\n      ) : null}\n\n    </>\n  );\n};\n\nexport default NewPassword;\n"],"names":["Button","sx","width","height","marginTop","marginRight","textTransform","variant","onClick","window","location","replace","password","confirm","validPassword","setModalUserBlock","setModalChangeSuccess","setModalNotAvailable","useState","isLoadingUpdate","setIsLoadingUpdate","updatePassword","useCallback","url","href","urlWordsArr","split","email","passowrdSecureNumber","requestBody","resetPassword","response","data","err","reload","LoadingButton","loading","disabled","float","setConfirm","errConfirm","setErrConfirm","validConfirm","setValidConfirm","confirmFocus","setConfirmFocus","useEffect","length","TextField","required","autoComplete","id","label","type","size","className","error","onChange","e","target","value","onFocus","onBlur","helperText","inputProps","maxLength","PASSWORD_REGEX","inputRef","setPassword","setValidPassword","passwordFocus","setPasswordFocus","result","test","document","body","style","overflow","marginBottom","open","userStore","to","tabIndex","obj","TypeError","useRef","modalUserBlock","modalChangeSuccess","modalNotAvailable","src","alt"],"sourceRoot":""}